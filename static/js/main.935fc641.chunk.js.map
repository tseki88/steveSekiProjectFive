{"version":3,"sources":["assets/sounds/alarm.mp3","assets/sounds/diceThrow2.wav","assets/sounds/dieShuffle1.wav","assets/sounds/dieShuffle2.wav","assets/sounds/dieShuffle3.wav","assets/sounds/dieThrow1.wav","assets/sounds/dieThrow2.wav","assets/sounds/dieThrow3.wav","assets/sounds/coin.mp3","components/TimerDisplay.js","hooks/useTimer.js","components/StopWatchTwo.js","components/TimerTwo.js","components/Dice.js","components/CoinFlip.js","firebase.js","components/ScoreBoardUnlink.js","components/Canvas.js","components/Container.js","Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TimerDisplay","props","tenMillisecondsValue","time","secondsValue","Math","floor","minutesValue","hoursValue","className","useTimer","increment","mute","useState","maxTime","setMaxTime","setTime","running","setRunning","alert","setAlert","toggleRunning","resetTimer","useEffect","alertSound","Audio","alarm","play","pause","currentTime","addTimerValue","useCallback","value","prevTime","timer","setInterval","clearInterval","StopWatchTwo","darkMode","useContext","DarkContext","Header","size","icon","content","dividing","inverted","Icon","name","onClick","delete","Button","Group","disabled","TimerTwo","Popup","trigger","Content","color","position","open","compact","Dice","dice","setDice","rolling","setRolling","sum","setSum","popup","setPopup","popupAdd","setPopupAdd","popupRemove","setPopupRemove","uniqueDice","setUniqueDice","diceCount","forEach","e","displayRandom","diceValues","display","random","ceil","push","sort","renderDiceButton","add","sides","type","newDiceArray","target","findIndex","splice","removeDice","interval","map","i","Transition","animation","duration","visible","key","setTimeout","diceThrowSound","dieRollSound","dieRollSound1","dieShuffle1","dieRollSound2","dieShuffle2","dieRollSound3","dieShuffle3","length","diceThrow","dieThrow1","dieThrow2","dieThrow3","on","onOpen","onClose","sortedDice","a","b","CoinFlip","coin","setCoin","uniqueCoin","setUniqueCoin","CoinCount","CoinValues","coinSound","newCoinArray","pop","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ScoreBoardUnlink","Row","Table","HeaderCell","Body","Cell","Footer","players","setPlayers","category","scores","scoreTypes","setScoreTypes","confirmDelete","setConfirmDelete","edit","setEdit","clearPopup","setClearPopup","total","setTotal","confirmRemove","renderPlayers","Input","fluid","placeholder","action","index","newPlayerState","newScoreState","removePlayer","label","labelPosition","onChange","event","updatedPlayers","nameHandler","renderScores","catObj","catInd","id","newScores","removeScoreCategory","updatedScore","scoreTypeHandler","scoreIndex","newValue","changeHandler","renderTotals","totalValue","parseInt","isNaN","definition","selectable","unstackable","columns","singleLine","active","prevState","newScoreObject","Canvas","mousePosition","setMousePosition","isPainting","setIsPainting","setColor","canvasRef","useRef","canvasWrapper","startPaint","preventDefault","coordinates","getCoordinates","current","canvas","offset","getBoundingClientRect","touches","removeEventListener","exitPaint","paint","x","pageX","left","y","pageY","window","scrollY","top","newMousePosition","drawLine","originalMousePosition","context","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","canvasParent","width","clientWidth","height","clientHeight","addEventListener","ref","style","list","clearRect","Container","tools","setTools","checkLimit","setMute","toggleMute","removeTool","updatedTools","tool","Main","setBoardLimit","componentId","setComponentId","clickHandler","item","filter","Sidebar","Pushable","as","Menu","onHide","setVisible","vertical","Item","Pusher","dimmed","href","React","createContext","App","setDarkMode","Radio","toggle","checked","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.935fc641.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.91de772f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/diceThrow2.42028cbf.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle1.b29cf404.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle2.a058de46.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle3.6a594926.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow1.07ec7caa.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow2.60f2c07a.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow3.f4755e95.wav\";","module.exports = __webpack_public_path__ + \"static/media/coin.e1a04d9f.mp3\";","import React from 'react'\n\nfunction TimerDisplay(props) { \n    const tenMillisecondsValue = props.time % 100;\n    const secondsValue = Math.floor(props.time / 100) % 60;\n    const minutesValue = Math.floor(props.time / 6000) % 60;\n    const hoursValue = Math.floor(props.time / 360000) % 60;\n\n    return (\n        <p className=\"timeDisplay\">\n            {hoursValue < 10 ? \"0\" + hoursValue : hoursValue} \n            <span className=\"mini\">h</span>\n            : \n            {minutesValue < 10 ? \"0\" + minutesValue : minutesValue}\n            <span className=\"mini\">m</span> \n            : \n            {secondsValue < 10 ? \"0\" + secondsValue : secondsValue} \n            <span className=\"mini\">s</span>\n            : \n            {tenMillisecondsValue < 10 ? \"0\" + tenMillisecondsValue \n            : \n            tenMillisecondsValue}\n        </p>\n    )\n}\n\nexport default TimerDisplay\n","import {useState, useEffect, useCallback} from 'react'\nimport alarm from '../assets/sounds/alarm.mp3'\n\nfunction useTimer(increment, mute = null) {\n\n    const [maxTime, setMaxTime] = useState(0);\n    const [time, setTime] = useState(0);\n    const [running, setRunning] = useState(false);\n    const [alert, setAlert] = useState(false)\n\n    const toggleRunning = () => {\n        setRunning(!running)\n    }\n\n    const resetTimer = () => {\n        setTime(0)\n        setMaxTime(0)\n    }\n\n    useEffect(() => {\n        const alertSound = new Audio(alarm)\n        if (!mute) {    \n            if (alert) {\n                alertSound.play()\n            } else {\n                alertSound.pause();\n                alertSound.currentTime=0;\n            }\n        }\n\n        setMaxTime(0)\n\n        return (() => {\n            alertSound.pause();\n            alertSound.currentTime=0;\n        })\n    },[alert])\n    \n    const addTimerValue = useCallback((value) => {\n        if (!increment) {\n            setMaxTime(prevTime => {\n                return prevTime + value\n            })\n        }\n        \n        setTime(prevTime => {\n            return prevTime + value\n        })\n    },[time, maxTime])\n    \n    \n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (running) {\n                if (increment) {\n                    setTime(prevTime => {\n                        return prevTime + 2\n                    })\n                } else {\n                    if (time <= 0){\n                        setRunning(false)\n                        setAlert(true)\n                        clearInterval(timer)\n                    } else {\n                        setTime(prevTime => {\n                            return prevTime - 2\n                        })\n                    }\n                }\n            }\n        }, 20)\n        \n        // if (!running) clearInterval(timer);\n\n        return () => {\n            clearInterval(timer)\n            // console.log(\"hey\")\n        }\n    })\n    \n    return {time, running, toggleRunning, resetTimer, addTimerValue, alert, setAlert, maxTime}\n}\n\nexport default useTimer\n\n","import React, { useContext } from 'react'\nimport TimerDisplay from './TimerDisplay';\nimport useTimer from '../hooks/useTimer'\nimport { Header, Button, Icon } from 'semantic-ui-react'\nimport { DarkContext } from '../App';\n\nfunction StopWatchTwo(props) {\n    const {time, running, toggleRunning, resetTimer} = useTimer(true);\n    const darkMode = useContext(DarkContext)\n\n    return (\n        <div className={`toolContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Header size=\"medium\" icon=\"time\" content=\"Stop Watch\" dividing inverted={darkMode} />\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} />\n            <TimerDisplay time={time} />\n            <Button.Group >\n                <Button icon={running ? \"pause\" : \"play\"} content={running ? \"Pause\" : \"Start\"} onClick={toggleRunning} inverted={darkMode} />\n                <Button icon='undo' content='Reset' onClick={resetTimer} disabled={running} inverted={darkMode} />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default StopWatchTwo\n","import React, { useContext } from 'react'\nimport TimerDisplay from './TimerDisplay';\nimport useTimer from '../hooks/useTimer';\nimport { Header, Button, Icon, Popup } from 'semantic-ui-react'\nimport { DarkContext } from '../App';\n\nfunction TimerTwo(props) {\n    const {\n        time, \n        running, \n        toggleRunning, \n        resetTimer, \n        addTimerValue, \n        alert, \n        setAlert,\n        maxTime\n    } = useTimer(false, props.mute);\n\n    const darkMode = useContext(DarkContext)\n\n    return (\n        <div className={`toolContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Popup\n                trigger={\n                    <Header size=\"medium\" dividing inverted={darkMode} >\n                        <Icon name={\n                            !running && maxTime\n                            ?\n                            \"hourglass\"\n                            :\n                                running && time / maxTime > 0.9\n                                ?\n                                \"hourglass start\"\n                                :\n                                    running && time / maxTime > 0.1\n                                    ?\n                                    \"hourglass half\"\n                                    :\n                                    \"hourglass end\"\n                        } />\n                        <Header.Content>Timer</Header.Content>\n                        <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n                    </Header>\n                }\n                content={\n                <Button content=\"Time's Up!\" color=\"red\" size=\"large\" onClick={()=> setAlert(false)} />}\n                position=\"bottom left\"\n                open={alert}\n                inverted={darkMode}\n            />\n            {/* <Header size=\"medium\" icon=\"hourglass\" content=\"Timer\" dividing /> */}\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} />\n            <TimerDisplay time={time} />\n            <div className=\"buttonContainer\">\n                <Button.Group >\n                    <Button \n                        icon={running ? \"pause\" : \"play\"} \n                        content={running ? \"Pause\" : \"Start\"} \n                        onClick={toggleRunning} \n                        disabled={time === 0} \n                        inverted={darkMode}\n                        />\n                    <Button icon='undo' content='Reset' onClick={resetTimer} disabled={running} inverted={darkMode} />\n                </Button.Group>\n                <Button.Group >\n                    <Button compact content=\"+ 10 sec.\" disabled={running} onClick={() => addTimerValue(1000)} inverted={darkMode} />\n                    <Button compact content=\"+ 30 sec.\" disabled={running} onClick={() => addTimerValue(3000)} inverted={darkMode} />\n                    <Button compact content=\"+ 1 min.\" disabled={running} onClick={() => addTimerValue(6000)} inverted={darkMode} />\n                    <Button compact content=\"+ 5 min.\" disabled={running} onClick={() => addTimerValue(30000)} inverted={darkMode} />\n                </Button.Group>\n            </div>\n        </div>\n    )\n}\n\nexport default TimerTwo\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Header, Button, Icon, Popup, Transition } from 'semantic-ui-react';\nimport diceThrow from '../assets/sounds/diceThrow2.wav'\nimport dieShuffle1 from '../assets/sounds/dieShuffle1.wav'\nimport dieShuffle2 from '../assets/sounds/dieShuffle2.wav'\nimport dieShuffle3 from '../assets/sounds/dieShuffle3.wav'\nimport dieThrow1 from '../assets/sounds/dieThrow1.wav'\nimport dieThrow2 from '../assets/sounds/dieThrow2.wav'\nimport dieThrow3 from '../assets/sounds/dieThrow3.wav'\nimport { DarkContext } from '../App';\n\n\nfunction Dice(props) {\n    const [dice, setDice] = useState([[6,6]])\n    const [rolling, setRolling] = useState(false)\n    const [sum, setSum] = useState(\"Calc\")\n    const [popup, setPopup] = useState(false)\n    const [popupAdd, setPopupAdd] = useState(false)\n    const [popupRemove, setPopupRemove] = useState(false)\n    \n    const darkMode = useContext(DarkContext)\n\n    const [uniqueDice, setUniqueDice] = useState({})\n\n    useEffect(() => {\n        let diceCount = {}\n        dice.forEach((e) => {\n            if (!diceCount[e[0]]) {\n                diceCount[e[0]] = 1\n            } else {\n                diceCount[e[0]]++\n            }\n        })\n        setUniqueDice(diceCount)\n    },[dice])\n\n    const addDice = (sides) => {\n        if (sides === 10) {\n            setDice([...dice, [sides, Math.floor(Math.random() * sides)]])\n        } else {\n            setDice([...dice, [sides, Math.ceil(Math.random() * sides)]])\n        }\n        setSum(\"Calc\")\n    }\n\n    const sortDice = () => {\n        let sortedDice = [...dice]\n        sortedDice.sort((a,b) => {\n            return a[1]-b[1];\n        })\n        setDice(sortedDice);\n    }\n\n    const removeDice = (type) => {\n        let newDiceArray = [...dice]\n        let target = newDiceArray.findIndex((e) => e[0] === type)\n        newDiceArray.splice(target,1)\n        setDice(newDiceArray);\n        setSum(\"Calc\")\n    }\n\n    const displaySum = () => {\n        let value = 0\n        dice.forEach((e) => {\n            value += e[1]\n        })\n        setSum(value)\n    }\n\n    const clearDice = () => {\n        setDice([])\n        setSum(\"Calc\")\n        setPopup(false)\n    }\n\n    const rollDice = () => {\n        setRolling(true)\n\n        if (!props.mute) {\n            const dieRollSound1 = new Audio(dieShuffle1)\n            const dieRollSound2 = new Audio(dieShuffle2)\n            const dieRollSound3 = new Audio(dieShuffle3)\n            let diceThrowSound\n            let dieRollSound\n\n            if (dice.length === 1) {\n                diceThrowSound = new Audio(diceThrow)\n            } else if (dice.length > 1) {\n                let r = Math.ceil(Math.random() * 3)\n                switch (r) {\n                    case 1:\n                        dieRollSound = dieRollSound1\n                        break\n                    case 2:\n                        dieRollSound = dieRollSound2\n                        break\n                    case 3:\n                        dieRollSound = dieRollSound3\n                        break\n                    default:\n                }\n\n                dieRollSound.play()\n\n                let t = Math.ceil(Math.random() * 3)\n                switch (t) {\n                    case 1:\n                        diceThrowSound = new Audio(dieThrow1)\n                        break\n                    case 2:\n                        diceThrowSound = new Audio(dieThrow2)\n                        break\n                    case 3:\n                        diceThrowSound = new Audio(dieThrow3)\n                        break\n                    default:\n                        return\n                }\n            }\n            setTimeout(() => {\n                \n                diceThrowSound.play()\n                setRolling(false)\n            },2000)\n        } else {\n            setTimeout(() => {\n                setRolling(false)\n            },2000)\n        }\n        setSum(\"Calc\")\n    }\n\n    const displayRandom = () => {\n        let diceValues = []\n        dice.forEach((e) => {\n            let display\n            if (e[0] === 10) {\n                display = Math.floor(Math.random() * e[0])\n            } else {\n                display = Math.ceil(Math.random() * e[0])\n            }\n            diceValues.push([e[0],display])\n        })\n        diceValues.sort(() => {\n            return 1 - Math.floor(Math.random() * 3)\n        })\n        setDice(diceValues)\n    }\n\n    const renderDiceButton = (value, add) => {\n        return (\n            <Button \n                onClick={() => {add ? addDice(value) : removeDice(value)}} \n                disabled={add ? false : !uniqueDice[`${value}`]}\n                inverted={darkMode} \n            >\n                <i className={`dice df-d${value}-${value}`}></i>{uniqueDice[`${value}`] ? uniqueDice[`${value}`] : 0}\n            </Button>\n        )\n    }\n\n    useEffect(() => {\n        let interval\n        rolling ? interval = setInterval(displayRandom, 100) : clearInterval(interval)\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [rolling])\n    \n    return (\n        <div className={`toolContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Header size=\"medium\" dividing inverted={darkMode} >\n                <Icon name=\"cube\" />\n                <Header.Content>Dice</Header.Content>\n                <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n            </Header>\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} />\n            <div className=\"diceContainer\">\n                {dice.map((e, i) => {\n                    return (\n                        <Transition\n                            animation=\"tada\"\n                            duration=\"500\"\n                            visible={!rolling}\n                            key={i}\n                        >\n                            <i className={`dice df-d${e[0]}-${e[1]} ${darkMode ? \"darkMode\" : null}`} key={`${i}-${e[1]}`}></i>\n                        </Transition>\n                    )\n                })}\n            </div>\n            <Button.Group>\n                <Button icon=\"shuffle\" content=\"Roll\" onClick={rollDice} disabled={rolling || dice.length === 0} inverted={darkMode} />\n                <Popup\n                    trigger={\n                        <Button icon=\"add\" disabled={rolling} inverted={darkMode} />\n                    }\n                    content={\n                        <>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(4,true)}\n                                {renderDiceButton(6,true)}\n                                {renderDiceButton(8,true)}\n                            </Button.Group>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(10,true)}\n                                {renderDiceButton(12,true)}\n                                {renderDiceButton(20,true)}\n                            </Button.Group>\n                        </>\n                    }\n                    on='click'\n                    onOpen={() => setPopupAdd(true)}\n                    onClose={() => setPopupAdd(false)}\n                    position='bottom center'\n                    open={popupAdd}\n                    inverted={darkMode}\n                />\n                <Popup\n                    trigger={\n                        <Button icon=\"minus\" disabled={dice.length === 0 || rolling} inverted={darkMode} />\n                    }\n                    content={\n                        <>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(4,false)}\n                                {renderDiceButton(6,false)}\n                                {renderDiceButton(8,false)}\n                            </Button.Group>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(10,false)}\n                                {renderDiceButton(12,false)}\n                                {renderDiceButton(20,false)}\n                            </Button.Group>\n                        </>\n                    }\n                    on='click'\n                    onOpen={() => setPopupRemove(true)}\n                    onClose={() => setPopupRemove(false)}\n                    position='bottom right'\n                    open={popupRemove}\n                    inverted={darkMode}\n                />\n            </Button.Group>\n            <Button.Group>\n                <Button icon=\"sort\" content=\"Sort\" onClick={sortDice} disabled={rolling} inverted={darkMode} />\n                <Button icon=\"calculator\" content={sum ? sum : \"\"} onClick={displaySum} disabled={rolling} inverted={darkMode} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Clear\" disabled={rolling} inverted={darkMode} />\n                    }\n                    content={<Button color='red' content='Clear Dice?' onClick={clearDice}  />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                    inverted={darkMode}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default Dice\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Header, Button, Popup, Transition, Icon } from 'semantic-ui-react';\nimport coinSound from '../assets/sounds/coin.mp3';\nimport { DarkContext } from '../App';\n\nfunction CoinFlip(props) {\n    const darkMode = useContext(DarkContext)\n\n    const [coin, setCoin] = useState([[2]])\n    const [rolling, setRolling] = useState(false)\n    const [sum, setSum] = useState(\"Calc\")\n    const [popup, setPopup] = useState(false)\n\n    const [uniqueCoin, setUniqueCoin] = useState({})\n\n    useEffect(() => {\n        let CoinCount = {}\n        coin.forEach((e) => {\n            if (!CoinCount[e]) {\n                CoinCount[e] = 1\n            } else {\n                CoinCount[e]++\n            }\n        })\n        setUniqueCoin(CoinCount)\n    },[coin])\n\n    const addCoin = () => {\n        setCoin([...coin, Math.ceil(Math.random() * 2)])\n        setSum(\"Calc\")\n    }\n\n    const removeCoin = () => {\n        let newCoinArray = [...coin]\n        newCoinArray.pop();\n        setCoin(newCoinArray);\n        setSum(\"Calc\")\n    }\n\n    const displaySum = () => {\n        let value = `H - ${uniqueCoin[\"2\"] ? uniqueCoin[\"2\"] : 0 } : T - ${uniqueCoin[\"1\"] ? uniqueCoin[\"1\"] : 0 }`;\n        setSum(value)\n    }\n\n    const clearCoin = () => {\n        setCoin([])\n        setSum(\"Calc\")\n        setPopup(false)\n    }\n\n    const rollCoin = () => {\n        if (!props.mute){\n            for (let i = 0; i < coin.length; i++) {\n                const flipSound = new Audio(coinSound)\n                flipSound.play()\n            }\n        }\n        setRolling(true)\n        setSum(\"Calc\")\n        displayRandom()\n        setTimeout(() => {\n            setRolling(false)\n        },500)\n    }\n\n    const displayRandom = () => {\n        let CoinValues = []\n        coin.forEach((e) => {\n            let display\n            display = Math.ceil(Math.random() * 2)\n            CoinValues.push(display)\n        })\n        setCoin(CoinValues)\n    }\n\n    useEffect(() => {\n        let interval\n        rolling ? interval = setInterval(displayRandom, 100) : clearInterval(interval)\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [rolling])\n    \n    return (\n        <div className={`toolContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Header size=\"medium\" dividing inverted={darkMode} >\n                <Icon name=\"bitcoin\" />\n                <Header.Content>Coin</Header.Content>\n                <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n            </Header>\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} />\n            <div className=\"diceContainer\">\n                {coin.map((e, i) => {\n                    return (\n                        <Transition\n                            animation=\"bounce\"\n                            duration=\"500\"\n                            visible={!rolling}\n                            key={i}\n                        >\n                            <i className={`dice df-d2-${e} ${darkMode ? \"darkMode\" : null}`} key={`${i}-${e}`}></i>\n                        </Transition>\n                    )\n                })}\n            </div>\n            <Button.Group>\n                <Button icon=\"shuffle\" content=\"Flip\" onClick={rollCoin} disabled={rolling || coin.length === 0} inverted={darkMode} />\n                <Button icon=\"add\" onClick={addCoin} disabled={rolling} inverted={darkMode} />\n                <Button icon=\"minus\" onClick={removeCoin} disabled={coin.length === 0 || rolling} inverted={darkMode} />\n            </Button.Group>\n            <Button.Group>\n                <Button icon=\"calculator\" content={sum ? sum : \"\"} onClick={displaySum} disabled={rolling} inverted={darkMode} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Clear\" disabled={rolling} inverted={darkMode} />\n                    }\n                    content={<Button color='red' content='Clear Coin?' onClick={clearCoin}  />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                    inverted={darkMode}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default CoinFlip\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY_TEST,\n    authDomain: \"super-fun-practice-app-5a95e.firebaseapp.com\",\n    databaseURL: \"https://super-fun-practice-app-5a95e.firebaseio.com\",\n    projectId: \"super-fun-practice-app-5a95e\",\n    storageBucket: \"super-fun-practice-app-5a95e.appspot.com\",\n    messagingSenderId: \"769252543566\",\n    appId: \"1:769252543566:web:30d01d2f10d09e6a1c471f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, {useState, useEffect, useContext} from 'react';\nimport { Header, Button, Table, Icon, Popup, Input} from 'semantic-ui-react';\nimport { DarkContext } from '../App';\n\nfunction ScoreBoardUnlink(props) {\n    const {Row, HeaderCell, Body, Cell, Footer} = Table\n    \n    const darkMode = useContext(DarkContext)\n    const [players, setPlayers] = useState([\"\"]);\n    const [scoreTypes, setScoreTypes] = useState([\n        {\n            category: \"Category\",\n            scores: [0]\n        }\n    ])\n    const [confirmDelete, setConfirmDelete] = useState(null)\n    // const [loading, setLoading] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [clearPopup, setClearPopup] = useState(false)\n    const [total, setTotal] = useState(false)\n\n    const changeHandler = (event, catInd, scoreIndex) => {\n        let updatedScore = [...scoreTypes]\n        let newValue = event.target.value\n        updatedScore[catInd][\"scores\"][scoreIndex] = newValue;\n        setScoreTypes(updatedScore)\n    }\n\n    const addPlayer = () => {\n        // let newPlayerState = [...players, \"\"]\n        setPlayers(prevState => {\n            return [...prevState, \"\"]\n        })\n\n        let newScoreState = [...scoreTypes]\n        newScoreState.forEach((e) => {\n            e.scores.push(0)\n        })\n        // scoreTypeDbRef.set(newScoreState)\n        setScoreTypes(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const confirmRemove = (type, i) => {\n        let target = {}\n        target[`${type}`] = i\n        setConfirmDelete(target)\n    }\n\n    const removePlayer = (index) => {\n        let newPlayerState = [...players]\n        newPlayerState.splice(index, 1)\n        // playerDbRef.set(newPlayerState)\n        setPlayers(newPlayerState)\n\n        let newScoreState = [...scoreTypes]\n        newScoreState.forEach((e) => {\n            e[\"scores\"].splice(index,1)\n        })\n        // scoreTypeDbRef.set(newScoreState)\n        setScoreTypes(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const addScore = () => {\n        let newScores = [];\n        for (let i = 0; i < players.length; i++) {\n            newScores.push(0)\n        }\n\n        let newScoreObject = {\n            category: \"\",\n            scores: newScores\n        }\n        let newScoreState = [...scoreTypes, newScoreObject]\n        \n        // scoreTypeDbRef.set(newScoreState)\n        setScoreTypes(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const removeScoreCategory = (index) => {\n        let newScores = [...scoreTypes];\n        newScores.splice(index,1);\n        // scoreTypeDbRef.set(newScores)\n        setScoreTypes(newScores)\n        setConfirmDelete(null)\n    }\n\n    const editToggle = () => {\n        setConfirmDelete(null)\n        setEdit(!edit)\n    }\n\n    const resetBoard = () => {\n        // const resetPlayers = [\n        //     \"\"\n        // ]\n        \n        const resetScores = [\n            {\n                category: \"Category\",\n                scores: [0]\n            }\n        ]\n        \n        setPlayers([\"\"])\n        // playerDbRef.set(resetPlayers);\n        // scoreTypeDbRef.set(resetScores);\n        setScoreTypes(resetScores)\n        setClearPopup(false)\n        setConfirmDelete(null)\n    }\n\n    const nameHandler = (event, index) => {\n        let updatedPlayers = [...players]\n        updatedPlayers[index] = event.target.value;\n        // playerDbRef.set(updatedPlayers)\n        setPlayers(updatedPlayers)\n    }\n\n    const scoreTypeHandler = (event, index) => {\n        let updatedScore = [...scoreTypes]\n        updatedScore[index][\"category\"] = event.target.value;\n        // scoreTypeDbRef.set(updatedScore)\n        setScoreTypes(updatedScore)\n    }\n\n    const renderPlayers = (\n        players.map((e, i) => {\n            return (\n                <HeaderCell key={i} >\n                    {\n                    edit\n                    ?\n                        (!confirmDelete || confirmDelete[\"player\"] !== i)\n                        ?\n                        <Input \n                            type=\"text\"\n                            value={e}\n                            fluid\n                            placeholder=\"Name\"\n                            label={{\n                                icon:\"delete\", \n                                onClick:() => confirmRemove(\"player\",i)\n                            }}\n                            labelPosition=\"right corner\"   \n                            inverted={darkMode}\n                        />\n                        :\n                        <Input \n                            type=\"text\"\n                            value={e}\n                            fluid\n                            placeholder=\"Name\"\n                            action={{\n                                icon:\"trash alternate\",\n                                color:\"red\", \n                                onClick: () => removePlayer(i)\n                            }}\n                            inverted={darkMode}\n                        />\n                    :\n                    <Input \n                        type=\"text\"\n                        value={e}\n                        fluid\n                        placeholder=\"Name\"\n                        onChange={(event) => {\n                            nameHandler(event, i)\n                        }}\n                        inverted={darkMode}\n                    />\n                    }   \n                </HeaderCell>\n            )\n        })\n    )\n\n    const renderScores = (\n        scoreTypes.map((catObj,catInd) => {\n            return(\n                catObj \n                ?\n                <Row key={catInd} id={catInd}>\n                    <HeaderCell>\n                    {\n                    edit\n                    ?\n                        (!confirmDelete || confirmDelete[\"score\"] !== catInd)\n                        ?\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            label={{\n                                icon:\"delete\", \n                                onClick:() => confirmRemove(\"score\",catInd)\n                            }}\n                            labelPosition=\"right corner\" \n                            inverted={darkMode}\n                        />\n                        :\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            action={{\n                                icon:\"trash alternate\",\n                                color:\"red\", \n                                onClick: () => removeScoreCategory(catInd)\n                            }}\n                            inverted={darkMode}\n                        />\n                    :\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            onChange={(event) => {\n                                scoreTypeHandler(event, catInd)\n                            }}\n                            inverted={darkMode}\n                        />\n                    }   \n                    </HeaderCell>\n                    {catObj.scores.map((e, i) => {\n                        return (\n                        <Cell key={i} id={i}>\n                            <Input \n                                type=\"number\"\n                                value={e} \n                                fluid\n                                onChange={(event) => {\n                                    changeHandler(event,catInd,i)}}\n                                inverted={darkMode}\n                                />\n                        </Cell>\n                        )\n                    })}\n                </Row>\n                :\n                null\n            )\n        })\n    )\n\n    const renderTotals = (\n        players.map((e,i) => {\n            let totalValue = 0;\n            scoreTypes.forEach((e) => {\n                let value = parseInt(e.scores[i])\n                totalValue += (isNaN(value) ?  0 : value);\n            })\n            return <HeaderCell key={i} >{total ? totalValue : \"-\"}</HeaderCell>\n        })\n    )\n\n\n    // ***** Figure out Firebase event handler unmounting...\n\n    // useEffect(() => {\n    //     setLoading(true)\n        \n\n    //     return(() => {\n    //         // playerDbRef()\n    //     })\n    // },[])\n\n    // useEffect(() => {\n    //     setLoading(true)\n    //     const playerDbRef = firebase.database().ref(\"players\");\n    //     const scoreTypeDbRef = firebase.database().ref(\"scoreTypes\");\n        \n        \n    //     playerDbRef.on(\"value\", (response) => {\n    //         const newState = [];\n    //         response.forEach((e) => {\n    //             newState.push(e.val())\n    //         })\n    //         setPlayers(newState)\n    //         // setLoading(false)\n    //     })\n        \n    //     scoreTypeDbRef.on(\"value\", (response) => {\n    //         const newState = [];\n    //         response.forEach((e) => {\n    //             newState.push(e.val())\n    //         })\n    //         setScoreTypes(newState)\n    //         setLoading(false)\n    //     })\n\n    //     return(() => {\n    //         // scoreTypeDbRef()\n    //     })\n    // },[])\n\n    return (\n        <div className={`toolContainer scoreContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Header size=\"medium\" icon=\"table\" content=\"Score Board\" dividing inverted={darkMode} />\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} /> \n            <Table definition selectable unstackable columns=\"4\" singleLine inverted={darkMode} >\n                <Table.Header>\n                    <Row>\n                        <HeaderCell></HeaderCell>\n                        {renderPlayers} \n                    </Row>\n                </Table.Header>\n                <Body>\n                    {renderScores}\n                </Body>\n                <Footer>\n                    <Row>\n                        <Cell>\n                            <Button \n                                icon={total ? \"hide\" : \"calculator\"} \n                                content=\"Total\"\n                                onClick={() => setTotal(!total)}\n                                fluid \n                                inverted={darkMode}\n                            />\n                        </Cell>\n                        {renderTotals}\n                    </Row>\n                </Footer>\n            </Table>\n            <Button.Group compact >\n                <Button \n                    icon={edit ? \"unlock\" : \"lock\"} \n                    active={!edit}\n                    content={edit ? \"Lock Table\" : \"Edit Table\"} \n                    onClick={editToggle} \n                    inverted={darkMode}\n                />\n                <Button icon=\"add user\" content=\"Player\" onClick={addPlayer} disabled={!edit}\n                inverted={darkMode} />\n                <Button icon=\"add\" content=\"Row\" onClick={addScore} disabled={!edit}\n                inverted={darkMode} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Reset\" disabled={!edit}\n                        inverted={darkMode} />\n                    }\n                    content={<Button color='red' content='Clear?' onClick={resetBoard} />}\n                    on='click'\n                    onOpen={() => setClearPopup(true)}\n                    onClose={() => setClearPopup(false)}\n                    position='top center'\n                    open={clearPopup}\n                    inverted={darkMode}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default ScoreBoardUnlink\n","import React, {useState, useEffect, useRef, useCallback, useContext} from 'react'\nimport { Header, Button, Icon, Input, Popup } from 'semantic-ui-react';\nimport { DarkContext } from '../App';\n\nfunction Canvas(props) {\n    const [mousePosition, setMousePosition] = useState();\n    const [isPainting, setIsPainting] = useState(false)\n    const [color, setColor] = useState(\"#ff0000\")\n    const [popup, setPopup] = useState(false)\n    const canvasRef = useRef(null)\n    const canvasWrapper = useRef(null)\n    const darkMode = useContext(DarkContext)\n    \n    const colorHandler = (event) => {\n        setColor(event.target.value)\n    }\n\n    const startPaint = useCallback((event) => {\n        event.preventDefault()\n        const coordinates = getCoordinates(event);\n        if (coordinates) {\n            setIsPainting(true);\n            setMousePosition(coordinates);\n        }\n    }, []);\n\n    const getCoordinates = (event) => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const offset = canvas.getBoundingClientRect()\n\n        // if touch event exists, remove mouse event listener (since touch events don't exist using mouse)\n        if (event.touches) {\n            canvas.removeEventListener('mouseup', exitPaint);\n            canvas.removeEventListener('mouseleave', exitPaint);\n            canvas.removeEventListener('mousedown', startPaint);\n            canvas.removeEventListener('mousemove', paint);\n            return {x: event.touches[0].pageX - offset.left, y: (event.touches[0].pageY - window.scrollY - offset.top)};\n        } else {\n            return {x: event.pageX - offset.left, y: event.pageY - window.scrollY - offset.top};\n        }\n    };\n\n    const paint = useCallback((event) => {\n        if (isPainting) {\n            // event.preventDefault()\n            const newMousePosition = getCoordinates(event);\n            if (mousePosition && newMousePosition) {\n                drawLine(mousePosition, newMousePosition);\n                setMousePosition(newMousePosition);\n            }\n        }\n    },[isPainting, mousePosition]);\n\n    const drawLine = (originalMousePosition, newMousePosition) => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.strokeStyle = color;\n            context.lineJoin = 'round';\n            context.lineWidth = 3;\n\n            context.beginPath();\n            context.moveTo(originalMousePosition.x, originalMousePosition.y);\n            context.lineTo(newMousePosition.x, newMousePosition.y);\n            context.closePath();\n\n            context.stroke();\n        }\n    };\n\n    const exitPaint = useCallback(() => {\n        setIsPainting(false);\n    }, []);\n\n    const clearCanvas = () => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        setPopup(false)\n    }\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current\n        const canvasParent = canvasWrapper.current;\n        canvas.width = canvasParent.clientWidth;\n        canvas.height = canvasParent.clientHeight;\n\n        canvas.addEventListener('touchstart', startPaint);\n        canvas.addEventListener('mousedown', startPaint);\n\n        return () => {\n            canvas.removeEventListener('touchstart', startPaint);\n            canvas.removeEventListener('mousedown', startPaint);\n        };\n    }, [startPaint]);\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        canvas.addEventListener('touchmove', paint);\n        canvas.addEventListener('mousemove', paint);\n\n        return () => {\n            canvas.removeEventListener('touchmove', paint);\n            canvas.removeEventListener('mousemove', paint);\n        };\n\n    }, [paint]);\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        canvas.addEventListener('touchend', exitPaint);\n        canvas.addEventListener('touchcancel', exitPaint);\n        canvas.addEventListener('mouseup', exitPaint);\n        canvas.addEventListener('mouseleave', exitPaint);\n\n        return () => {\n            canvas.removeEventListener('touchend', exitPaint);\n            canvas.removeEventListener('touchcancel', exitPaint);\n            canvas.removeEventListener('mouseup', exitPaint);\n            canvas.removeEventListener('mouseleave', exitPaint);\n        };\n    }, [exitPaint]);\n\n    return (\n        <div className={`toolContainer ${darkMode ? \"darkMode\" : null}`}>\n            <Header size=\"medium\" icon=\"pencil\" content=\"Canvas\" dividing inverted={darkMode} />\n            <Icon name=\"delete\" onClick={props.delete} inverted={darkMode} />     \n            <div className=\"canvasContainer\" ref={canvasWrapper}>\n                <canvas\n                    ref={canvasRef}\n                    style={{\"border\":\"1px solid black\"}}\n                    />\n                </div>\n            <div>\n            <Input type=\"color\" list=\"colorList\" value={color} onChange={(e) => colorHandler(e)} inverted={darkMode} />\n            <datalist id=\"colorList\">\n                <option value=\"#ff0000\" />\n                <option value=\"#000000\" />\n                <option value=\"#00ff00\" />\n                <option value=\"#0000ff\" />\n            </datalist>\n            <Popup\n                    trigger={\n                        <Button icon=\"erase\" content=\"Clear\" inverted={darkMode} />\n                    }\n                    content={<Button color='red' content='Clear Canvas?' onClick={clearCanvas} />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                    inverted={darkMode}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Canvas\n","import React, {useState, useCallback} from 'react';\nimport {Button} from 'semantic-ui-react'\nimport StopWatchTwo from './StopWatchTwo';\nimport TimerTwo from './TimerTwo';\nimport Dice from './Dice';\nimport CoinFlip from './CoinFlip';\nimport ScoreBoard from './ScoreBoard';\nimport ScoreBoardUnlink from './ScoreBoardUnlink'\nimport Canvas from './Canvas';\n// import { DarkContext } from '../App';\n\nfunction Container (props) {\n\n    const {tools, setTools, checkLimit} = props\n\n    // const darkMode = useContext(DarkContext)\n\n    // const [tools, setTools] = useState([\n    //     {tool:\"dice\", id:\"0\"},\n    //     {tool:\"timer\",id:\"1\"},\n    //     {tool:\"stopwatch\",id:\"2\"},\n    //     {tool:\"coin\",id:\"3\"},\n    //     {tool: \"scoreboard\", id:\"4\"},\n    //     {tool: \"canvas\", id: \"5\"}\n    // ]);\n    // const [boardLimit, setBoardLimit] = useState(true)\n    \n\n    // const [componentId, setComponentId] = useState(tools.length)\n    const [mute, setMute] = useState(false)\n\n    const toggleMute = useCallback(() => {\n        setMute(!mute)\n    },[mute])\n\n    // const clickHandler = (item) => {\n    //     let updatedTools = [...tools, {tool: item, id: componentId}]\n    //     setTools(updatedTools)\n    //     setComponentId(prevState => {\n    //         return prevState + 1\n    //     })\n    //     checkLimit(updatedTools)\n    // }\n\n    const removeTool = useCallback((id) => {\n        let target = tools.findIndex(e => e.id === id)\n        let updatedTools = [...tools]\n        updatedTools.splice(target, 1);\n        setTools(updatedTools);\n        checkLimit(updatedTools)\n    },[tools])\n\n    // const checkLimit = (updatedTools) => {\n    //     const check = updatedTools.filter((e) => {\n    //         return e.tool === \"scoreboard\"\n    //     })\n    //     if (check.length) {\n    //         setBoardLimit(true)\n    //     } else {\n    //         setBoardLimit(false)\n    //     }\n    // }\n\n    const getComponent = (tool,id) => {\n        switch(tool) {\n            case \"timer\":\n                return <TimerTwo key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"stopwatch\":\n                return <StopWatchTwo key={id} delete={() => removeTool(id)} />\n            case \"dice\":\n                return <Dice key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"coin\":\n                return <CoinFlip key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"scoreboard\":\n                return <ScoreBoardUnlink key={id} delete={() => removeTool(id)} />\n            case \"canvas\":\n                return <Canvas key={id} delete={() => removeTool(id)} />\n            default:\n                return\n        }\n    }\n\n    return (\n        <>\n\n            <div className=\"componentAppender\">\n            <Button size=\"large\" icon={mute ? \"volume off\" : \"volume up\"} color={mute ? \"red\" : \"green\"} onClick={toggleMute} />\n            {/* <Button.Group > */}\n                {/* <Button size=\"large\" icon=\"time\" onClick={() => clickHandler(\"stopwatch\")} inverted={darkMode} />\n                <Button size=\"large\" icon=\"hourglass\" onClick={() => clickHandler(\"timer\")} inverted={darkMode} />\n                <Button size=\"large\" icon=\"cube\" onClick={() => clickHandler(\"dice\")} inverted={darkMode} />\n                <Button size=\"large\" icon=\"bitcoin\" onClick={() => clickHandler(\"coin\")} inverted={darkMode} />\n                <Button size=\"large\" icon=\"pencil\" onClick={() => clickHandler(\"canvas\")} inverted={darkMode} />\n                <Button size=\"large\" icon=\"table\" content=\"temp: max-1\" onClick={() => clickHandler(\"scoreboard\")} disabled={boardLimit} inverted={darkMode} /> */}\n            {/* </Button.Group> */}\n            </div>\n            <div className=\"flex\">\n                {tools.map((e) => {\n                    return (\n                        // <div className=\"toolContainer\" key={e.id}>\n                            getComponent(e.tool,e.id)\n                        // </div>\n                    )\n                })}\n            </div>\n        {/* </Sidebar.Pushable> */}\n        </>\n    );\n};\n\nexport default Container;","import React, {useState, useContext} from 'react';\nimport {Sidebar, Menu} from 'semantic-ui-react'\nimport Container from './components/Container';\nimport { DarkContext } from './App';\n\n\nfunction Main(props) {\n\n    const darkMode = useContext(DarkContext)\n\n    const [tools, setTools] = useState([\n        {tool:\"dice\", id:\"0\"},\n        {tool:\"timer\",id:\"1\"},\n        {tool:\"stopwatch\",id:\"2\"},\n        {tool:\"coin\",id:\"3\"},\n        {tool: \"scoreboard\", id:\"4\"},\n        {tool: \"canvas\", id: \"5\"}\n    ]);\n    const [boardLimit, setBoardLimit] = useState(true)\n    \n\n    const [componentId, setComponentId] = useState(tools.length)\n\n    const clickHandler = (item) => {\n        let updatedTools = [...tools, {tool: item, id: componentId}]\n        setTools(updatedTools)\n        setComponentId(prevState => {\n            return prevState + 1\n        })\n        checkLimit(updatedTools)\n    }\n\n    const checkLimit = (updatedTools) => {\n        const check = updatedTools.filter((e) => {\n            return e.tool === \"scoreboard\"\n        })\n        if (check.length) {\n            setBoardLimit(true)\n        } else {\n            setBoardLimit(false)\n        }\n    }\n\n\n\n    return (\n        <>\n        <Sidebar.Pushable>\n            <Sidebar\n                as={Menu}\n                animation='overlay'\n                icon='labeled'\n                inverted={darkMode}\n                onHide={() => props.setVisible(false)}\n                vertical\n                visible={props.visible}\n                width='thin'\n            >\n                <Menu.Item content=\"Stop Watch\" icon=\"time\" onClick={() => clickHandler(\"stopwatch\")} />\n                <Menu.Item content=\"Timer\" icon=\"hourglass\" onClick={() => clickHandler(\"timer\")} />\n                <Menu.Item content=\"Dice\" icon=\"cube\" onClick={() => clickHandler(\"dice\")} />\n                <Menu.Item content=\"Coin\" icon=\"bitcoin\" onClick={() => clickHandler(\"coin\")} />\n                <Menu.Item content=\"Canvas\" icon=\"pencil\" onClick={() => clickHandler(\"canvas\")} />\n                <Menu.Item content=\"Score Board\" icon=\"table\" onClick={() => clickHandler(\"scoreboard\")} />\n                {/* <Menu.Item content=\"Score Board (max-1 temp)\" icon=\"table\" onClick={!boardLimit ? () => clickHandler(\"scoreboard\") : null} /> */}\n                {/* <Menu.Item name=\"Sign Out\" icon=\"log out\" active color=\"red\" onClick={() => {\n                    props.setVisible(false)\n                    props.handleSignOut()\n                }} /> */}\n            </Sidebar>\n            <Sidebar.Pusher dimmed={props.visible}>\n                <Container tools={tools} setTools={setTools} checkLimit={checkLimit} />\n            </Sidebar.Pusher>\n        </Sidebar.Pushable>\n        </>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nfunction Footer () {\n\n\n    return (\n        <footer>\n            <a href=\"https://github.com/tseki88/steveSekiProjectFive\" target=\"_blank\">\n            Created by Steve Seki <Icon name=\"github\" size=\"large\" />\n            </a>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, {useState, useEffect } from 'react';\nimport {Header, Radio, Icon, Button, Loader, Segment, Dimmer} from 'semantic-ui-react';\nimport Main from './Main';\nimport Footer from './components/Footer';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport * as firebaseui from 'firebaseui';\nimport 'firebase/auth';\n\nexport const DarkContext = React.createContext()\n\n// const uiConfig = {\n//   signInFlow: 'popup',\n//   signInOptions: [\n//       {\n//           provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n//           customParameters: {\n//               prompt: 'select_account'\n//           },\n//       },\n//       firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID,\n//   ],\n// };\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [visible, setVisible] = useState(false)\n  // const [loggedIn, setLoggedIn] = useState(false)\n  // const [userId, setUserId] = useState('')\n  // const [userName, setUserName] = useState('')\n  // const [loading, setLoading] = useState(false)\n\n\n  // useEffect(() => {\n  //   setLoading(true)\n  //   const authCheck = firebase.auth().onAuthStateChanged((user) => {\n  //     if (user) {\n  //         setLoggedIn(true)\n  //         if (user.isAnonymous) {\n  //           setUserName(\"Guest\")\n  //         } else {\n  //           setUserName(user.displayName)\n  //           setUserId(user.uid)\n  //         }\n  //     }\n  //     setLoading(false)\n  //   });\n\n  //   return (() => {\n  //     authCheck()\n  //     firebase.auth().signOut();\n  //   })\n  // }, [])\n\n  // // const setAuthentication = (userInfo) => {\n  // //   setUserId(userInfo.uid)\n  // // }\n\n  // const handleSignOut = () => {\n  //   firebase.auth().signOut();\n  //   setLoggedIn(false)\n  //   setUserId('')\n  //   setUserName('')\n  // }\n\n  // useEffect(() => {\n  //   firebase.auth().onAuthStateChanged(user => {\n  //     firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n  //       .then(function () {\n  //         if (user) {\n  //           if (user.isAnonymous) {\n  //             setUserName(\"Guest\")\n  //           } else {\n  //             setUserName(user.displayName)\n  //             setUserId(user.uid)\n  //           }\n  //         }\n  //         return true;\n  //       })\n  //   })\n  // },[])\n\n  return (\n    <div className={`app ${darkMode ? \"darkMode\" : null}`}>\n      {/* {\n        loading\n        ?\n        <Segment>\n        <Dimmer active page>\n            <Loader content=\"Loading\" inverted={darkMode} /> \n        </Dimmer>\n        </Segment>\n        :\n          !loggedIn\n          ?\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n          :\n          <> */}\n            <header>\n              <Button content=\"+\" compact onClick={() => {setVisible(!visible)}} inverted={darkMode} />\n        <Header as=\"h1\" inverted>Board Game Toolkit</Header>\n              <div className=\"darkToggle\" >\n                <Icon name=\"sun\" size=\"large\" color=\"orange\" inverted={darkMode} />\n                <Radio className=\"darkToggleSwitch\" toggle size=\"small\" onChange={() => setDarkMode(!darkMode)} checked={darkMode} />\n                <Icon name=\"moon\" size=\"large\" color=\"yellow\" inverted={darkMode} />\n              </div>\n            </header>\n            \n            <DarkContext.Provider value={darkMode}>\n              <Main \n                visible={visible} \n                setVisible={setVisible} \n                // handleSignOut={handleSignOut} \n              />\n            </DarkContext.Provider>\n            <Footer />\n          {/* </>\n      } */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport './dicefont/dicefont.css';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}