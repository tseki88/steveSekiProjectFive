{"version":3,"sources":["assets/sounds/alarm.mp3","assets/sounds/diceThrow2.wav","assets/sounds/dieShuffle1.wav","assets/sounds/dieShuffle2.wav","assets/sounds/dieShuffle3.wav","assets/sounds/dieThrow1.wav","assets/sounds/dieThrow2.wav","assets/sounds/dieThrow3.wav","assets/sounds/coin.mp3","components/TimerDisplay.js","hooks/useTimer.js","components/StopWatchTwo.js","components/TimerTwo.js","components/Dice.js","components/CoinFlip.js","firebase.js","components/ScoreBoard.js","components/Canvas.js","components/Container.js","Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TimerDisplay","props","tenMillisecondsValue","time","secondsValue","Math","floor","minutesValue","hoursValue","className","useTimer","increment","mute","useState","maxTime","setMaxTime","setTime","running","setRunning","alert","setAlert","toggleRunning","resetTimer","useEffect","alertSound","Audio","alarm","play","pause","currentTime","addTimerValue","value","prevTime","timer","setInterval","clearInterval","StopWatchTwo","Header","size","icon","content","dividing","Icon","name","onClick","delete","Button","Group","disabled","TimerTwo","Popup","trigger","Content","color","position","open","compact","Dice","dice","setDice","rolling","setRolling","sum","setSum","popup","setPopup","popupAdd","setPopupAdd","popupRemove","setPopupRemove","uniqueDice","setUniqueDice","diceCount","forEach","e","displayRandom","diceValues","display","random","ceil","push","sort","renderDiceButton","add","sides","type","newDiceArray","target","findIndex","splice","removeDice","interval","map","i","Transition","animation","duration","visible","key","setTimeout","diceThrowSound","dieRollSound","dieRollSound1","dieShuffle1","dieRollSound2","dieShuffle2","dieRollSound3","dieShuffle3","length","diceThrow","dieThrow1","dieThrow2","dieThrow3","on","onOpen","onClose","sortedDice","a","b","CoinFlip","coin","setCoin","uniqueCoin","setUniqueCoin","CoinCount","CoinValues","coinSound","newCoinArray","pop","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ScoreBoard","Row","Table","HeaderCell","Body","Cell","Footer","players","setPlayers","category","scores","scoreTypes","setScoreTypes","confirmDelete","setConfirmDelete","loading","setLoading","edit","setEdit","clearPopup","setClearPopup","total","setTotal","console","log","playerDbRef","database","ref","scoreTypeDbRef","confirmRemove","renderPlayers","Input","fluid","placeholder","action","index","newPlayerState","set","newScoreState","removePlayer","label","labelPosition","onChange","event","updatedPlayers","nameHandler","renderScores","catObj","catInd","id","newScores","removeScoreCategory","updatedScore","scoreTypeHandler","scoreIndex","newValue","changeHandler","renderTotals","totalValue","parseInt","isNaN","response","newState","val","Segment","Dimmer","active","Loader","Placeholder","style","height","width","definition","selectable","unstackable","columns","singleLine","newScoreObject","Canvas","mousePosition","setMousePosition","isPainting","setIsPainting","setColor","canvasRef","useRef","canvasWrapper","startPaint","useCallback","preventDefault","coordinates","getCoordinates","current","canvas","offset","getBoundingClientRect","touches","removeEventListener","exitPaint","paint","x","pageX","left","y","pageY","window","scrollY","top","newMousePosition","drawLine","originalMousePosition","context","getContext","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","canvasParent","clientWidth","clientHeight","addEventListener","list","clearRect","Container","tool","tools","setTools","boardLimit","setBoardLimit","componentId","setComponentId","setMute","clickHandler","item","updatedTools","prevState","checkLimit","removeTool","filter","Main","href","App","as","inverted","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d4222de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.91de772f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/diceThrow2.42028cbf.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle1.b29cf404.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle2.a058de46.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieShuffle3.6a594926.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow1.07ec7caa.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow2.60f2c07a.wav\";","module.exports = __webpack_public_path__ + \"static/media/dieThrow3.f4755e95.wav\";","module.exports = __webpack_public_path__ + \"static/media/coin.e1a04d9f.mp3\";","import React from 'react'\n\nfunction TimerDisplay(props) { \n    const tenMillisecondsValue = props.time % 100;\n    const secondsValue = Math.floor(props.time / 100) % 60;\n    const minutesValue = Math.floor(props.time / 6000) % 60;\n    const hoursValue = Math.floor(props.time / 360000) % 60;\n\n    return (\n        <p className=\"timeDisplay\">\n            {hoursValue < 10 ? \"0\" + hoursValue : hoursValue} \n            <span className=\"mini\">h</span>\n            : \n            {minutesValue < 10 ? \"0\" + minutesValue : minutesValue}\n            <span className=\"mini\">m</span> \n            : \n            {secondsValue < 10 ? \"0\" + secondsValue : secondsValue} \n            <span className=\"mini\">s</span>\n            : \n            {tenMillisecondsValue < 10 ? \"0\" + tenMillisecondsValue \n            : \n            tenMillisecondsValue}\n        </p>\n    )\n}\n\nexport default TimerDisplay\n","import {useState, useEffect} from 'react'\nimport alarm from '../assets/sounds/alarm.mp3'\n\nfunction useTimer(increment, mute = null) {\n\n    const [maxTime, setMaxTime] = useState(0);\n    const [time, setTime] = useState(0);\n    const [running, setRunning] = useState(false);\n    const [alert, setAlert] = useState(false)\n\n    const toggleRunning = () => {\n        setRunning(!running)\n    }\n\n    const resetTimer = () => {\n        setTime(0)\n        setMaxTime(0)\n    }\n\n    useEffect(() => {\n        const alertSound = new Audio(alarm)\n        if (!mute) {    \n            if (alert) {\n                alertSound.play()\n            } else {\n                alertSound.pause();\n                alertSound.currentTime=0;\n            }\n        }\n\n        setMaxTime(0)\n\n        return (() => {\n            alertSound.pause();\n            alertSound.currentTime=0;\n        })\n    },[alert])\n    \n    const addTimerValue = (value) => {\n        if (!increment) {\n            setMaxTime(prevTime => {\n                return prevTime + value\n            })\n        }\n        \n        setTime(prevTime => {\n            return prevTime + value\n        })\n    }\n    \n    \n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (running) {\n                if (increment) {\n                    setTime(prevTime => {\n                        return prevTime + 2\n                    })\n                } else {\n                    if (time <= 0){\n                        setRunning(false)\n                        setAlert(true)\n                        clearInterval(timer)\n                    } else {\n                        setTime(prevTime => {\n                            return prevTime - 2\n                        })\n                    }\n                }\n            }\n        }, 20)\n        \n        // if (!running) clearInterval(timer);\n\n        return () => {\n            clearInterval(timer)\n            // console.log(\"hey\")\n        }\n    })\n    \n    return {time, running, toggleRunning, resetTimer, addTimerValue, alert, setAlert, maxTime}\n}\n\nexport default useTimer\n\n","import React from 'react'\nimport TimerDisplay from './TimerDisplay';\nimport useTimer from '../hooks/useTimer'\nimport { Header, Button, Icon } from 'semantic-ui-react'\n\nfunction StopWatchTwo(props) {\n    const {time, running, toggleRunning, resetTimer} = useTimer(true);\n\n    return (\n        <div className=\"toolContainer\">\n            <Header size=\"medium\" icon=\"time\" content=\"Stop Watch\" dividing />\n            <Icon name=\"delete\" onClick={props.delete} />\n            <TimerDisplay time={time} />\n            <Button.Group >\n                <Button icon={running ? \"pause\" : \"play\"} content={running ? \"Pause\" : \"Start\"} onClick={toggleRunning} />\n                <Button icon='undo' content='Reset' onClick={resetTimer} disabled={running} />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default StopWatchTwo\n","import React from 'react'\nimport TimerDisplay from './TimerDisplay';\nimport useTimer from '../hooks/useTimer';\nimport { Header, Button, Icon, Popup } from 'semantic-ui-react'\n\nfunction TimerTwo(props) {\n    const {\n        time, \n        running, \n        toggleRunning, \n        resetTimer, \n        addTimerValue, \n        alert, \n        setAlert,\n        maxTime\n    } = useTimer(false, props.mute);\n\n    return (\n        <div className=\"toolContainer\">\n            <Popup\n                trigger={\n                    <Header size=\"medium\" dividing>\n                        <Icon name={\n                            !running && maxTime\n                            ?\n                            \"hourglass\"\n                            :\n                                running && time / maxTime > 0.9\n                                ?\n                                \"hourglass start\"\n                                :\n                                    running && time / maxTime > 0.1\n                                    ?\n                                    \"hourglass half\"\n                                    :\n                                    \"hourglass end\"\n                        } />\n                        <Header.Content>Timer</Header.Content>\n                        <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n                    </Header>\n                }\n                content={\n                <Button content=\"Time's Up!\" color=\"red\" size=\"large\" onClick={()=> setAlert(false)} />}\n                position=\"bottom left\"\n                open={alert}\n            />\n            {/* <Header size=\"medium\" icon=\"hourglass\" content=\"Timer\" dividing /> */}\n            <Icon name=\"delete\" onClick={props.delete} />\n            <TimerDisplay time={time} />\n            <div className=\"buttonContainer\">\n                <Button.Group >\n                    <Button \n                        icon={running ? \"pause\" : \"play\"} \n                        content={running ? \"Pause\" : \"Start\"} \n                        onClick={toggleRunning} \n                        disabled={time === 0} \n                        />\n                    <Button icon='undo' content='Reset' onClick={resetTimer} disabled={running} />\n                </Button.Group>\n                <Button.Group >\n                    <Button compact content=\"+ 10 sec.\" disabled={running} onClick={() => addTimerValue(1000)} />\n                    <Button compact content=\"+ 30 sec.\" disabled={running} onClick={() => addTimerValue(3000)} />\n                    <Button compact content=\"+ 1 min.\" disabled={running} onClick={() => addTimerValue(6000)} />\n                    <Button compact content=\"+ 5 min.\" disabled={running} onClick={() => addTimerValue(30000)} />\n                </Button.Group>\n            </div>\n        </div>\n    )\n}\n\nexport default TimerTwo\n","import React, { useState, useEffect } from 'react'\nimport { Header, Button, Icon, Popup, Transition } from 'semantic-ui-react';\nimport diceThrow from '../assets/sounds/diceThrow2.wav'\nimport dieShuffle1 from '../assets/sounds/dieShuffle1.wav'\nimport dieShuffle2 from '../assets/sounds/dieShuffle2.wav'\nimport dieShuffle3 from '../assets/sounds/dieShuffle3.wav'\nimport dieThrow1 from '../assets/sounds/dieThrow1.wav'\nimport dieThrow2 from '../assets/sounds/dieThrow2.wav'\nimport dieThrow3 from '../assets/sounds/dieThrow3.wav'\n\n\nfunction Dice(props) {\n    const [dice, setDice] = useState([[6,6]])\n    const [rolling, setRolling] = useState(false)\n    const [sum, setSum] = useState(\"Calc\")\n    const [popup, setPopup] = useState(false)\n    const [popupAdd, setPopupAdd] = useState(false)\n    const [popupRemove, setPopupRemove] = useState(false)\n    // const [mute, setMute] = useState(false)\n\n    const [uniqueDice, setUniqueDice] = useState({})\n\n    useEffect(() => {\n        let diceCount = {}\n        dice.forEach((e) => {\n            if (!diceCount[e[0]]) {\n                diceCount[e[0]] = 1\n            } else {\n                diceCount[e[0]]++\n            }\n        })\n        setUniqueDice(diceCount)\n    },[dice])\n\n    const addDice = (sides) => {\n        if (sides === 10) {\n            setDice([...dice, [sides, Math.floor(Math.random() * sides)]])\n        } else {\n            setDice([...dice, [sides, Math.ceil(Math.random() * sides)]])\n        }\n        setSum(\"Calc\")\n    }\n\n    const sortDice = () => {\n        let sortedDice = [...dice]\n        sortedDice.sort((a,b) => {\n            return a[1]-b[1];\n        })\n        setDice(sortedDice);\n    }\n\n    const removeDice = (type) => {\n        let newDiceArray = [...dice]\n        let target = newDiceArray.findIndex((e) => e[0] === type)\n        newDiceArray.splice(target,1)\n        setDice(newDiceArray);\n        setSum(\"Calc\")\n    }\n\n    const displaySum = () => {\n        let value = 0\n        dice.forEach((e) => {\n            value += e[1]\n        })\n        setSum(value)\n    }\n\n    const clearDice = () => {\n        setDice([])\n        setSum(\"Calc\")\n        setPopup(false)\n    }\n\n    const rollDice = () => {\n        setRolling(true)\n\n        if (!props.mute) {\n            const dieRollSound1 = new Audio(dieShuffle1)\n            const dieRollSound2 = new Audio(dieShuffle2)\n            const dieRollSound3 = new Audio(dieShuffle3)\n            let diceThrowSound\n            let dieRollSound\n\n            if (dice.length === 1) {\n                diceThrowSound = new Audio(diceThrow)\n            } else if (dice.length > 1) {\n                let r = Math.ceil(Math.random() * 3)\n                switch (r) {\n                    case 1:\n                        dieRollSound = dieRollSound1\n                        break\n                    case 2:\n                        dieRollSound = dieRollSound2\n                        break\n                    case 3:\n                        dieRollSound = dieRollSound3\n                        break\n                    default:\n                }\n\n                dieRollSound.play()\n\n                let t = Math.ceil(Math.random() * 3)\n                switch (t) {\n                    case 1:\n                        diceThrowSound = new Audio(dieThrow1)\n                        break\n                    case 2:\n                        diceThrowSound = new Audio(dieThrow2)\n                        break\n                    case 3:\n                        diceThrowSound = new Audio(dieThrow3)\n                        break\n                    default:\n                        return\n                }\n            }\n            setTimeout(() => {\n                \n                diceThrowSound.play()\n                setRolling(false)\n            },2000)\n        } else {\n            setTimeout(() => {\n                setRolling(false)\n            },2000)\n        }\n        setSum(\"Calc\")\n    }\n\n    const displayRandom = () => {\n        let diceValues = []\n        dice.forEach((e) => {\n            let display\n            if (e[0] === 10) {\n                display = Math.floor(Math.random() * e[0])\n            } else {\n                display = Math.ceil(Math.random() * e[0])\n            }\n            diceValues.push([e[0],display])\n        })\n        diceValues.sort(() => {\n            return 1 - Math.floor(Math.random() * 3)\n        })\n        setDice(diceValues)\n    }\n\n    const renderDiceButton = (value, add) => {\n        return (\n            <Button \n                onClick={() => {add ? addDice(value) : removeDice(value)}} \n                disabled={add ? false : !uniqueDice[`${value}`]} \n            >\n                <i className={`dice df-d${value}-${value}`}></i>{uniqueDice[`${value}`] ? uniqueDice[`${value}`] : 0}\n            </Button>\n        )\n    }\n\n    useEffect(() => {\n        let interval\n        rolling ? interval = setInterval(displayRandom, 100) : clearInterval(interval)\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [rolling])\n    \n    return (\n        <div className=\"toolContainer\">\n            <Header size=\"medium\" dividing>\n                <Icon name=\"cube\" />\n                <Header.Content>Dice</Header.Content>\n                <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n            </Header>\n            <Icon name=\"delete\" onClick={props.delete} />\n            <div className=\"diceContainer\">\n                {dice.map((e, i) => {\n                    return (\n                        <Transition\n                            animation=\"tada\"\n                            duration=\"500\"\n                            visible={!rolling}\n                        >\n                            <i className={`dice df-d${e[0]}-${e[1]}`} key={`${i}-${e[1]}`}></i>\n                        </Transition>\n                    )\n                })}\n            </div>\n            <Button.Group>\n                <Button icon=\"shuffle\" content=\"Roll\" onClick={rollDice} disabled={rolling || dice.length === 0} />\n                <Popup\n                    trigger={\n                        <Button icon=\"add\" disabled={rolling} />\n                    }\n                    content={\n                        <>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(4,true)}\n                                {renderDiceButton(6,true)}\n                                {renderDiceButton(8,true)}\n                            </Button.Group>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(10,true)}\n                                {renderDiceButton(12,true)}\n                                {renderDiceButton(20,true)}\n                            </Button.Group>\n                        </>\n                    }\n                    on='click'\n                    onOpen={() => setPopupAdd(true)}\n                    onClose={() => setPopupAdd(false)}\n                    position='bottom center'\n                    open={popupAdd}\n                />\n                <Popup\n                    trigger={\n                        <Button icon=\"minus\" disabled={dice.length === 0 || rolling} />\n                    }\n                    content={\n                        <>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(4,false)}\n                                {renderDiceButton(6,false)}\n                                {renderDiceButton(8,false)}\n                            </Button.Group>\n                            <Button.Group className=\"diceButtons\">\n                                {renderDiceButton(10,false)}\n                                {renderDiceButton(12,false)}\n                                {renderDiceButton(20,false)}\n                            </Button.Group>\n                        </>\n                    }\n                    on='click'\n                    onOpen={() => setPopupRemove(true)}\n                    onClose={() => setPopupRemove(false)}\n                    position='bottom right'\n                    open={popupRemove}\n                />\n            </Button.Group>\n            <Button.Group>\n                <Button icon=\"sort\" content=\"Sort\" onClick={sortDice} disabled={rolling} />\n                <Button icon=\"calculator\" content={sum ? sum : \"\"} onClick={displaySum} disabled={rolling} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Clear\" disabled={rolling} />\n                    }\n                    content={<Button color='red' content='Clear Dice?' onClick={clearDice}  />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default Dice\n","import React, { useState, useEffect } from 'react'\nimport { Header, Button, Popup, Transition, Icon } from 'semantic-ui-react';\nimport coinSound from '../assets/sounds/coin.mp3';\n\nfunction CoinFlip(props) {\n    const [coin, setCoin] = useState([[2]])\n    const [rolling, setRolling] = useState(false)\n    const [sum, setSum] = useState(\"Calc\")\n    const [popup, setPopup] = useState(false)\n\n    const [uniqueCoin, setUniqueCoin] = useState({})\n\n    useEffect(() => {\n        let CoinCount = {}\n        coin.forEach((e) => {\n            if (!CoinCount[e]) {\n                CoinCount[e] = 1\n            } else {\n                CoinCount[e]++\n            }\n        })\n        setUniqueCoin(CoinCount)\n    },[coin])\n\n    const addCoin = () => {\n        setCoin([...coin, Math.ceil(Math.random() * 2)])\n        setSum(\"Calc\")\n    }\n\n    const removeCoin = () => {\n        let newCoinArray = [...coin]\n        newCoinArray.pop();\n        setCoin(newCoinArray);\n        setSum(\"Calc\")\n    }\n\n    const displaySum = () => {\n        let value = `H - ${uniqueCoin[\"2\"] ? uniqueCoin[\"2\"] : 0 } : T - ${uniqueCoin[\"1\"] ? uniqueCoin[\"1\"] : 0 }`;\n        setSum(value)\n    }\n\n    const clearCoin = () => {\n        setCoin([])\n        setSum(\"Calc\")\n        setPopup(false)\n    }\n\n    const rollCoin = () => {\n        if (!props.mute){\n            for (let i = 0; i < coin.length; i++) {\n                const flipSound = new Audio(coinSound)\n                flipSound.play()\n            }\n        }\n        setRolling(true)\n        setSum(\"Calc\")\n        displayRandom()\n        setTimeout(() => {\n            setRolling(false)\n        },500)\n    }\n\n    const displayRandom = () => {\n        let CoinValues = []\n        coin.forEach((e) => {\n            let display\n            display = Math.ceil(Math.random() * 2)\n            CoinValues.push(display)\n        })\n        setCoin(CoinValues)\n    }\n\n    useEffect(() => {\n        let interval\n        rolling ? interval = setInterval(displayRandom, 100) : clearInterval(interval)\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [rolling])\n    \n    return (\n        <div className=\"toolContainer\">\n            <Header size=\"medium\" dividing>\n                <Icon name=\"bitcoin\" />\n                <Header.Content>Coin</Header.Content>\n                <Icon name={props.mute ? \"volume off\" : \"volume up\"} color={props.mute ? \"red\" : \"green\"} className=\"toolStatus\" />\n            </Header>\n            <Icon name=\"delete\" onClick={props.delete} />\n            <div className=\"diceContainer\">\n                {coin.map((e, i) => {\n                    return (\n                        <Transition\n                            animation=\"bounce\"\n                            duration=\"500\"\n                            visible={!rolling}\n                        >\n                            <i className={`dice df-d2-${e}`} key={`${i}-${e}`}></i>\n                        </Transition>\n                    )\n                })}\n            </div>\n            <Button.Group>\n                <Button icon=\"shuffle\" content=\"Flip\" onClick={rollCoin} disabled={rolling || coin.length === 0} />\n                <Button icon=\"add\" onClick={addCoin} disabled={rolling} />\n                <Button icon=\"minus\" onClick={removeCoin} disabled={coin.length === 0 || rolling} />\n            </Button.Group>\n            <Button.Group>\n                <Button icon=\"calculator\" content={sum ? sum : \"\"} onClick={displaySum} disabled={rolling} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Clear\" disabled={rolling} />\n                    }\n                    content={<Button color='red' content='Clear Coin?' onClick={clearCoin}  />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default CoinFlip\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY_TEST,\n    authDomain: \"super-fun-practice-app-5a95e.firebaseapp.com\",\n    databaseURL: \"https://super-fun-practice-app-5a95e.firebaseio.com\",\n    projectId: \"super-fun-practice-app-5a95e\",\n    storageBucket: \"super-fun-practice-app-5a95e.appspot.com\",\n    messagingSenderId: \"769252543566\",\n    appId: \"1:769252543566:web:30d01d2f10d09e6a1c471f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, {useState, useEffect} from 'react';\nimport firebase from '../firebase';\nimport { Header, Button, Table, Icon, Popup, Input, Loader, Dimmer, Segment, Placeholder } from 'semantic-ui-react';\n\nfunction ScoreBoard(props) {\n    const {Row, HeaderCell, Body, Cell, Footer} = Table\n\n    const [players, setPlayers] = useState([\"\"]);\n    const [scoreTypes, setScoreTypes] = useState([\n        {\n            category: \"Category\",\n            scores: [0]\n        }\n    ])\n    const [confirmDelete, setConfirmDelete] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [clearPopup, setClearPopup] = useState(false)\n    const [total, setTotal] = useState(false)\n\n    console.log(\"rerender\")\n\n    const playerDbRef = firebase.database().ref(\"players\");\n    const scoreTypeDbRef = firebase.database().ref(\"scoreTypes\");\n\n    const changeHandler = (event, catInd, scoreIndex) => {\n        let updatedScore = [...scoreTypes]\n        let newValue = event.target.value\n        updatedScore[catInd][\"scores\"][scoreIndex] = newValue;\n        scoreTypeDbRef.set(updatedScore);\n    }\n\n    const addPlayer = () => {\n        let newPlayerState = [...players, \"\"]\n        playerDbRef.set(newPlayerState)\n\n        let newScoreState = [...scoreTypes]\n        newScoreState.forEach((e) => {\n            e.scores.push(0)\n        })\n        scoreTypeDbRef.set(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const confirmRemove = (type, i) => {\n        let target = {}\n        target[`${type}`] = i\n        setConfirmDelete(target)\n    }\n\n    const removePlayer = (index) => {\n        let newPlayerState = [...players]\n        newPlayerState.splice(index, 1)\n        playerDbRef.set(newPlayerState)\n\n        let newScoreState = [...scoreTypes]\n        newScoreState.forEach((e) => {\n            e[\"scores\"].splice(index,1)\n        })\n        scoreTypeDbRef.set(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const addScore = () => {\n        let newScores = [];\n        for (let i = 0; i < players.length; i++) {\n            newScores.push(0)\n        }\n\n        let newScoreObject = {\n            category: \"\",\n            scores: newScores\n        }\n        let newScoreState = [...scoreTypes, newScoreObject]\n        \n        scoreTypeDbRef.set(newScoreState)\n        setConfirmDelete(null)\n    }\n\n    const removeScoreCategory = (index) => {\n        let newScores = [...scoreTypes];\n        newScores.splice(index,1);\n        scoreTypeDbRef.set(newScores)\n        setConfirmDelete(null)\n    }\n\n    const editToggle = () => {\n        setConfirmDelete(null)\n        setEdit(!edit)\n    }\n\n    const resetBoard = () => {\n        const resetPlayers = [\n            \"\"\n        ]\n        \n        const resetScores = [\n            {\n                category: \"Category\",\n                scores: [0]\n            }\n        ]\n        \n        playerDbRef.set(resetPlayers);\n        scoreTypeDbRef.set(resetScores);\n        setClearPopup(false)\n        setConfirmDelete(null)\n    }\n\n    const nameHandler = (event, index) => {\n        let updatedPlayers = [...players]\n        updatedPlayers[index] = event.target.value;\n        playerDbRef.set(updatedPlayers)\n    }\n\n    const scoreTypeHandler = (event, index) => {\n        let updatedScore = [...scoreTypes]\n        updatedScore[index][\"category\"] = event.target.value;\n        scoreTypeDbRef.set(updatedScore)\n    }\n\n    const renderPlayers = (\n        players.map((e, i) => {\n            return (\n                <HeaderCell key={i}>\n                    {\n                    edit\n                    ?\n                        (!confirmDelete || confirmDelete[\"player\"] !== i)\n                        ?\n                        <Input \n                            type=\"text\"\n                            value={e}\n                            fluid\n                            placeholder=\"Name\"\n                            label={{\n                                icon:\"delete\", \n                                onClick:() => confirmRemove(\"player\",i)\n                            }}\n                            labelPosition=\"right corner\"    \n                        />\n                        :\n                        <Input \n                            type=\"text\"\n                            value={e}\n                            fluid\n                            placeholder=\"Name\"\n                            action={{\n                                icon:\"trash alternate\",\n                                color:\"red\", \n                                onClick: () => removePlayer(i)\n                            }}\n                        />\n                    :\n                    <Input \n                        type=\"text\"\n                        value={e}\n                        fluid\n                        placeholder=\"Name\"\n                        onChange={(event) => {\n                            nameHandler(event, i)\n                        }}\n                    />\n                    }   \n                </HeaderCell>\n            )\n        })\n    )\n\n    const renderScores = (\n        scoreTypes.map((catObj,catInd) => {\n            return(\n                catObj \n                ?\n                <Row key={catInd} id={catInd}>\n                    <HeaderCell>\n                    {\n                    edit\n                    ?\n                        (!confirmDelete || confirmDelete[\"score\"] !== catInd)\n                        ?\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            label={{\n                                icon:\"delete\", \n                                onClick:() => confirmRemove(\"score\",catInd)\n                            }}\n                            labelPosition=\"right corner\"    \n                        />\n                        :\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            action={{\n                                icon:\"trash alternate\",\n                                color:\"red\", \n                                onClick: () => removeScoreCategory(catInd)\n                            }}\n                        />\n                    :\n                        <Input \n                            type=\"text\"\n                            value={catObj.category}\n                            placeholder=\"Category\"\n                            fluid\n                            onChange={(event) => {\n                                scoreTypeHandler(event, catInd)\n                            }}    \n                        />\n                    }   \n                    </HeaderCell>\n                    {catObj.scores.map((e, i) => {\n                        return (\n                        <Cell key={i} id={i}>\n                            <Input \n                                type=\"number\"\n                                value={e} \n                                fluid\n                                onChange={(event) => {\n                                    changeHandler(event,catInd,i)}}\n                                />\n                        </Cell>\n                        )\n                    })}\n                </Row>\n                :\n                null\n            )\n        })\n    )\n\n    const renderTotals = (\n        players.map((e,i) => {\n            let totalValue = 0;\n            scoreTypes.forEach((e) => {\n                let value = parseInt(e.scores[i])\n                totalValue += (isNaN(value) ?  0 : value);\n            })\n            return <HeaderCell key={i} >{total ? totalValue : \"-\"}</HeaderCell>\n        })\n    )\n\n\n    // ***** Figure out Firebase event handler unmounting...\n\n    useEffect(() => {\n        setLoading(true)\n        const playerDbRef = firebase.database().ref(\"players\");\n\n        playerDbRef.on(\"value\", (response) => {\n            const newState = [];\n            response.forEach((e) => {\n                newState.push(e.val())\n            })\n            setPlayers(newState)\n            setLoading(false)\n        })\n\n        return(() => {\n            // playerDbRef()\n        })\n    },[])\n\n    useEffect(() => {\n        setLoading(true)\n        const scoreTypeDbRef = firebase.database().ref(\"scoreTypes\");\n\n        scoreTypeDbRef.on(\"value\", (response) => {\n            const newState = [];\n            response.forEach((e) => {\n                newState.push(e.val())\n            })\n            setScoreTypes(newState)\n            setLoading(false)\n        })\n\n        return(() => {\n            // scoreTypeDbRef()\n        })\n    },[])\n\n    return (\n        <div className=\"toolContainer scoreContainer\">\n            <Header size=\"medium\" icon=\"table\" content=\"Score Card\" dividing />\n            <Icon name=\"delete\" onClick={props.delete} />\n            {\n            loading \n            ? \n            <Segment>\n            <Dimmer active>\n                <Loader content=\"Loading\" /> \n            </Dimmer>\n            <Placeholder style={{ height: 200, width: 300 }} />\n            </Segment>\n            : \n            <Table definition selectable unstackable columns=\"3\" singleLine >\n                <Table.Header>\n                    <Row>\n                        <HeaderCell></HeaderCell>\n                        {renderPlayers} \n                    </Row>\n                </Table.Header>\n                <Body>\n                    {renderScores}\n                </Body>\n                <Footer>\n                    <Row>\n                        <Cell>\n                            <Button \n                                icon={total ? \"hide\" : \"calculator\"} \n                                content=\"Total\"\n                                onClick={() => setTotal(!total)}\n                                fluid \n                            />\n                        </Cell>\n                        {renderTotals}\n                    </Row>\n                </Footer>\n            </Table>\n            }\n            <Button.Group compact>\n                <Button \n                    icon={edit ? \"unlock\" : \"lock\"} \n                    active={!edit}\n                    content={edit ? \"Lock Table\" : \"Edit Table\"} \n                    onClick={editToggle} \n                />\n                <Button icon=\"add user\" content=\"Player\" onClick={addPlayer} disabled={!edit} />\n                <Button icon=\"add\" content=\"Row\" onClick={addScore} disabled={!edit} />\n                <Popup\n                    trigger={\n                        <Button icon=\"undo\" content=\"Reset\" disabled={!edit} />\n                    }\n                    content={<Button color='red' content='Clear?' onClick={resetBoard}  />}\n                    on='click'\n                    onOpen={() => setClearPopup(true)}\n                    onClose={() => setClearPopup(false)}\n                    position='top center'\n                    open={clearPopup}\n                />\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default ScoreBoard\n","import React, {useState, useEffect, useRef, useCallback} from 'react'\nimport { Header, Button, Icon, Input, Popup } from 'semantic-ui-react';\n\nfunction Canvas(props) {\n    const [mousePosition, setMousePosition] = useState();\n    const [isPainting, setIsPainting] = useState(false)\n    const [color, setColor] = useState(\"#ff0000\")\n    const [popup, setPopup] = useState(false)\n    const canvasRef = useRef(null)\n    const canvasWrapper = useRef(null)\n    \n    const colorHandler = (event) => {\n        setColor(event.target.value)\n    }\n\n    const startPaint = useCallback((event) => {\n        event.preventDefault()\n        const coordinates = getCoordinates(event);\n        if (coordinates) {\n            setIsPainting(true);\n            setMousePosition(coordinates);\n        }\n    }, []);\n\n    const getCoordinates = (event) => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const offset = canvas.getBoundingClientRect()\n\n        // if touch event exists, remove mouse event listener (since touch events don't exist using mouse)\n        if (event.touches) {\n            canvas.removeEventListener('mouseup', exitPaint);\n            canvas.removeEventListener('mouseleave', exitPaint);\n            canvas.removeEventListener('mousedown', startPaint);\n            canvas.removeEventListener('mousemove', paint);\n            return {x: event.touches[0].pageX - offset.left, y: (event.touches[0].pageY - window.scrollY - offset.top)};\n        } else {\n            return {x: event.pageX - offset.left, y: event.pageY - window.scrollY - offset.top};\n        }\n    };\n\n    const paint = useCallback((event) => {\n        if (isPainting) {\n            // event.preventDefault()\n            const newMousePosition = getCoordinates(event);\n            if (mousePosition && newMousePosition) {\n                drawLine(mousePosition, newMousePosition);\n                setMousePosition(newMousePosition);\n            }\n        }\n    },[isPainting, mousePosition]);\n\n    const drawLine = (originalMousePosition, newMousePosition) => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.strokeStyle = color;\n            context.lineJoin = 'round';\n            context.lineWidth = 3;\n\n            context.beginPath();\n            context.moveTo(originalMousePosition.x, originalMousePosition.y);\n            context.lineTo(newMousePosition.x, newMousePosition.y);\n            context.closePath();\n\n            context.stroke();\n        }\n    };\n\n    const exitPaint = useCallback(() => {\n        setIsPainting(false);\n    }, []);\n\n    const clearCanvas = () => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current\n        const canvasParent = canvasWrapper.current;\n        canvas.width = canvasParent.clientWidth;\n        canvas.height = canvasParent.clientHeight;\n\n        canvas.addEventListener('touchstart', startPaint);\n        canvas.addEventListener('mousedown', startPaint);\n\n        return () => {\n            canvas.removeEventListener('touchstart', startPaint);\n            canvas.removeEventListener('mousedown', startPaint);\n        };\n    }, [startPaint]);\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        canvas.addEventListener('touchmove', paint);\n        canvas.addEventListener('mousemove', paint);\n\n        return () => {\n            canvas.removeEventListener('touchmove', paint);\n            canvas.removeEventListener('mousemove', paint);\n        };\n\n    }, [paint]);\n\n    useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n        const canvas = canvasRef.current;\n        canvas.addEventListener('touchend', exitPaint);\n        canvas.addEventListener('touchcancel', exitPaint);\n        canvas.addEventListener('mouseup', exitPaint);\n        canvas.addEventListener('mouseleave', exitPaint);\n\n        return () => {\n            canvas.removeEventListener('touchend', exitPaint);\n            canvas.removeEventListener('touchcancel', exitPaint);\n            canvas.removeEventListener('mouseup', exitPaint);\n            canvas.removeEventListener('mouseleave', exitPaint);\n        };\n    }, [exitPaint]);\n\n    return (\n        <div className=\"toolContainer\">\n            <Header size=\"medium\" icon=\"pencil\" content=\"Canvas\" dividing />\n            <Icon name=\"delete\" onClick={props.delete} />     \n            <div className=\"canvasContainer\" ref={canvasWrapper}>\n                <canvas\n                    ref={canvasRef}\n                    style={{\"border\":\"1px solid black\"}}\n                    />\n                </div>\n            <div>\n            <Input type=\"color\" list=\"colorList\" value={color} onChange={(e) => colorHandler(e)} />\n            <datalist id=\"colorList\">\n                <option value=\"#ff0000\" />\n                <option value=\"#000000\" />\n                <option value=\"#00ff00\" />\n                <option value=\"#0000ff\" />\n            </datalist>\n            <Popup\n                    trigger={\n                        <Button icon=\"erase\" content=\"Clear\" />\n                    }\n                    content={<Button color='red' content='Clear Canvas?' onClick={clearCanvas}  />}\n                    on='click'\n                    onOpen={() => setPopup(true)}\n                    onClose={() => setPopup(false)}\n                    position='top center'\n                    open={popup}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Canvas\n","import React, {useState} from 'react';\nimport {Button, Label} from 'semantic-ui-react'\nimport StopWatchTwo from './StopWatchTwo';\nimport TimerTwo from './TimerTwo';\nimport Dice from './Dice';\nimport CoinFlip from './CoinFlip';\nimport ScoreBoard from './ScoreBoard';\nimport Canvas from './Canvas';\n\nfunction Container () {\n\n    const [tools, setTools] = useState([\n        {tool:\"dice\", id:\"0\"},\n        {tool:\"timer\",id:\"1\"},\n        {tool:\"stopwatch\",id:\"2\"},\n        {tool:\"coin\",id:\"3\"},\n        {tool: \"scoreboard\", id:\"4\"},\n        {tool: \"canvas\", id: \"5\"}\n    ]);\n    const [boardLimit, setBoardLimit] = useState(true)\n\n    const [componentId, setComponentId] = useState(tools.length)\n    const [mute, setMute] = useState(false)\n\n    const toggleMute = () => {\n        setMute(!mute)\n    }\n\n    const clickHandler = (item) => {\n        let updatedTools = [...tools, {tool: item, id: componentId}]\n        setTools(updatedTools)\n        setComponentId(prevState => {\n            return prevState + 1\n        })\n        checkLimit(updatedTools)\n    }\n\n    const removeTool = (id) => {\n        let target = tools.findIndex(e => e.id === id)\n        let updatedTools = [...tools]\n        updatedTools.splice(target, 1);\n        setTools(updatedTools);\n        checkLimit(updatedTools)\n    }\n\n    const checkLimit = (updatedTools) => {\n        const check = updatedTools.filter((e) => {\n            return e.tool === \"scoreboard\"\n        })\n        if (check.length) {\n            setBoardLimit(true)\n        } else {\n            setBoardLimit(false)\n        }\n    }\n\n    const getComponent = (tool,id) => {\n        switch(tool) {\n            case \"timer\":\n                return <TimerTwo key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"stopwatch\":\n                return <StopWatchTwo key={id} delete={() => removeTool(id)} />\n            case \"dice\":\n                return <Dice key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"coin\":\n                return <CoinFlip key={id} delete={() => removeTool(id)} mute={mute} />\n            case \"scoreboard\":\n                return <ScoreBoard key={id} delete={() => removeTool(id)} />\n            case \"canvas\":\n                return <Canvas key={id} delete={() => removeTool(id)} />\n            default:\n                return\n        }\n    }\n\n    return (\n        <>\n        <div className=\"componentAppender\">\n        <Button size=\"large\" icon={mute ? \"volume off\" : \"volume up\"} color={mute ? \"red\" : \"green\"} onClick={toggleMute} />\n        {/* <Button.Group > */}\n            <Button size=\"large\" icon=\"time\" onClick={() => clickHandler(\"stopwatch\")} />\n            <Button size=\"large\" icon=\"hourglass\" onClick={() => clickHandler(\"timer\")} />\n            <Button size=\"large\" icon=\"cube\" onClick={() => clickHandler(\"dice\")} />\n            <Button size=\"large\" icon=\"bitcoin\" onClick={() => clickHandler(\"coin\")} />\n            <Button size=\"large\" icon=\"pencil\" onClick={() => clickHandler(\"canvas\")} />\n            <Button size=\"large\" icon=\"table\" content=\"temp: max-1\" onClick={() => clickHandler(\"scoreboard\")} disabled={boardLimit} />\n        {/* </Button.Group> */}\n        </div>\n        <div className=\"flex\">\n            {tools.map((e) => {\n                return (\n                    // <div className=\"toolContainer\" key={e.id}>\n                        getComponent(e.tool,e.id)\n                    // </div>\n                )\n            })}\n        </div>\n        </>\n    );\n};\n\nexport default Container;","import React from 'react';\n// import {Button} from 'semantic-ui-react'\nimport Container from './components/Container';\n\n\nfunction Main() {\n\n    return (\n        <div>\n            <Container />\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nfunction Footer () {\n\n\n    return (\n        <footer>\n            <a href=\"https://github.com/tseki88/steveSekiProjectFive\" target=\"_blank\">\n            Created by Steve Seki <Icon name=\"github\" size=\"large\" />\n            </a>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport {Header} from 'semantic-ui-react';\nimport Main from './Main';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header>\n          <Header as=\"h1\" inverted>Board Game Toolkit</Header>\n        </header>\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport './dicefont/dicefont.css';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}